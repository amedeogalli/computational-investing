# import the needed libraries
import numpy as np
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt
import matplotlib.ticker as tkr

# download the futures price of gold commodity
gold_futures = yf.download('GC=F')

# store the futures price of gold commodity in a dataframe
gold_df = pd.DataFrame(gold_futures)

# compute the daily logarithmic returns for gold futures
gold_futures["log_returns"] = np.log(gold_futures["Adj Close"]).diff()

# compute the annualized mean of logarithmic returns for gold futures
gold_mean_return = gold_futures["log_returns"].mean()

# compute the volatility of gold logarithmic returns
gold_volatility = gold_futures["log_returns"].std()

# round the maximum and minimum logarithmic returns
max_log_return = np.round(gold_futures["log_returns"].max(),3)
min_log_return = np.round(gold_futures["log_returns"].min(),3)

# specify the number of bins for the histogram
number_bins = int((max_log_return - min_log_return) * 100)

# plot histogram
plt.hist(gold_futures["log_returns"], bins = number_bins, color = "blue", label = "Gold Logarithmic Returns")

# add vertical lines for mean and volatility
plt.axvline(gold_mean_return, color = "red", linestyle = "dotted", linewidth = 2.5, label = "Gold Mean Return")
for i in range(1,4):
  plt.axvline(gold_mean_return + i * gold_volatility, color = "green", linestyle = "dashed", linewidth = 1.5, label = f"+{i} std")
  plt.axvline(gold_mean_return - i * gold_volatility, color = "orange", linestyle = "dashed", linewidth = 1.5, label = f"-{i} std")

# add title, labels and legend
plt.title("Histogram of Gold Futures Logarithmic Returns")
plt.xlabel("Logarithmic Returns")
plt.ylabel("Frequency = log")
plt.legend()

# format y-axis labels to display integers
plt.gca().yaxis.set_major_formatter(tkr.StrMethodFormatter("{x:,.0f}"))

# show plot
plt.show()


